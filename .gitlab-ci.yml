stages:
  - build
  - test
  - deploy


variables:
  DOCKER_DRIVER: overlay2
  DEFAULT_VERUSCOIN_BRANCH: dev
  DEFAULT_EASYDEXGUI_BRANCH: dev
  AGAMA_VERSION: 0.4.0e
  VERUSCOIN_VERSION: 0.4.0e
  BINARY_SOURCE: VerusCoin
  EASYDEX_GUI_BUILD: build.tar.gz
  ELECTRON_BUILD_LINUX: Agama-linux-x64
  ELECTRON_BUILD_WINDOWS: Agama-win32-x64
  ELECTRON_BUILD_MACOS: Agama-darwin-x64
  AGAMA_LINUX: ${ELECTRON_BUILD_LINUX}-v${AGAMA_VERSION}.tar.gz
  AGAMA_WINDOWS: ${ELECTRON_BUILD_WINDOWS}-v${AGAMA_VERSION}.zip
  AGAMA_MACOS: Agama-MacOS-v${AGAMA_VERSION}
  GIT_SUBMODULE_STRATEGY: recursive
  POST_COMMENT: "Pipeline Trigger: ${CI_PIPELINE_SOURCE}$\n
      Branch: ${CI_COMMIT_REF_NAME}$\n
      Commit: ${CI_COMMIT_SHA}$\n
      ${CI_COMMIT_MESSAGE}$\n"


build:linux:
  image: asherd/agama-builder
  stage: build
  before_script:
  - echo "$AUTH_KEY" > AUTH_KEY.json &&
    gcloud auth activate-service-account
    --key-file AUTH_KEY.json &&
    rm AUTH_KEY.json
  - if [ -z "${UPSTREAM_CLI_BRANCH}" ]; then export
      VERUS_CLI_LINUX="${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH}/Linux/Verus-CLI-Linux-v${VERUSCOIN_VERSION}.tar.gz"; fi
  - (echo "fetching latest build from  EasyDEX-GUI:$CI_COMMIT_REF_NAME" &&
      gsutil cp $STAGING/EasyDEX-GUI/$CI_COMMIT_REF_NAME/$EASYDEX_GUI_BUILD .) ||
      (echo "No EasyDEX-GUI builds available from the ${CI_COMMIT_REF_NAME} branch, fetching from ${DEFAULT_VERUSCOIN_BRANCH}" &&
      gsutil cp $STAGING/EasyDEX-GUI/$DEFAULT_EASYDEXGUI_BRANCH/$EASYDEX_GUI_BUILD .)
  - tar -xzf $EASYDEX_GUI_BUILD --directory gui/EasyDEX-GUI/react &&
      rm $EASYDEX_GUI_BUILD
  - gsutil cp $STAGING/$VERUS_CLI_LINUX .
  - mkdir -p assets/bin/
  - tar -xzf Verus-CLI-Linux-v${VERUSCOIN_VERSION}.tar.gz --directory assets/bin/
  - rm $VERUS_CLI_LINUX
  - mv assets/bin/verus-cli assets/bin/linux64
  script:
  - npm install electron-packager -g
  - npm install electron -g --unsafe-perm=true
  - npm install
  - npm run package-linux
  - cd build
  - tar -czf $AGAMA_LINUX $ELECTRON_BUILD_LINUX
  - curl -F file=@"$AGAMA_LINUX"
      -F channels="$AGAMA_POST_CHANNEL"
      -F initial_comment="${POST_COMMENT}"
      -H "${SLACK_BOT_AUTH}"
      "https://slack.com/api/files.upload"
  - mv $AGAMA_LINUX ..
  artifacts:
    paths: [$AGAMA_LINUX]
    expire_in: 1 week



build:windows:
  stage: build
  image: asherd/agama-builder:windows
  before_script:
  - echo "$AUTH_KEY" > AUTH_KEY.json &&
    gcloud auth activate-service-account
    --key-file AUTH_KEY.json &&
    rm AUTH_KEY.json
  - if [ -z "${UPSTREAM_CLI_BRANCH}" ]; then export
      VERUS_CLI_WINDOWS="${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH}/Windows/Verus-CLI-Windows-v${VERUSCOIN_VERSION}.zip"; fi
  - echo "fetching latest build from  EasyDEX-GUI:$CI_COMMIT_REF_NAME"
  - gsutil cp $STAGING/EasyDEX-GUI/$CI_COMMIT_REF_NAME/$EASYDEX_GUI_BUILD . ||
      gsutil cp $STAGING/EasyDEX-GUI/$DEFAULT_EASYDEXGUI_BRANCH/$EASYDEX_GUI_BUILD .
  - tar -xzf $EASYDEX_GUI_BUILD --directory gui/EasyDEX-GUI/react && rm $EASYDEX_GUI_BUILD
  - gsutil cp $STAGING/$VERUS_CLI_WINDOWS .
  - unzip -qq Verus-CLI-Windows-v${VERUSCOIN_VERSION}.zip -d assets/bin/
  - rm $VERUS_CLI_WINDOWS
  - mv assets/bin/verus-cli assets/bin/win64
  script:
  - npm install electron-packager -g
  - npm install electron -g --unsafe-perm=true
  - npm install
  - npm run package-win
  - cd build
  - zip -r $AGAMA_WINDOWS $ELECTRON_BUILD_WINDOWS
  - curl -F file=@"$AGAMA_WINDOWS"
      -F channels="$AGAMA_POST_CHANNEL"
      -F initial_comment="${POST_COMMENT}"
      -H "${SLACK_BOT_AUTH}"
      "https://slack.com/api/files.upload"
  - mv $AGAMA_WINDOWS ..
  artifacts:
    paths: [$AGAMA_WINDOWS]
    expire_in: 1 week


build:mac:
  stage: build
  tags: ["High Sierra"]
  before_script:
  - if [ -z "${UPSTREAM_CLI_BRANCH}" ]; then export
      VERUS_CLI_MACOS="${BINARY_SOURCE}/${DEFAULT_VERUSCOIN_BRANCH}/MacOS/Verus-CLI-MacOS-v${VERUSCOIN_VERSION}.tar.gz"; fi
  - gsutil cp $STAGING/EasyDEX-GUI/$CI_COMMIT_REF_NAME/$EASYDEX_GUI_BUILD . ||
      gsutil cp $STAGING/EasyDEX-GUI/$DEFAULT_EASYDEXGUI_BRANCH/$EASYDEX_GUI_BUILD .
  - tar -xzf $EASYDEX_GUI_BUILD --directory gui/EasyDEX-GUI/react &&
      rm $EASYDEX_GUI_BUILD
  - gsutil cp $STAGING/$VERUS_CLI_MACOS .
  - mkdir -p assets/bin/
  - tar -xzf Verus-CLI-MacOS-v${VERUSCOIN_VERSION}.tar.gz --directory assets/bin/
  - rm $VERUS_CLI_MACOS
  - mv assets/bin/verus-cli assets/bin/osx
  script:
  - npm install
  - npm install electron-packager -g
  - npm run package-mac
  - npm run create-installer-mac
  - curl -F file=@"$AGAMA_MACOS.dmg"
      -F channels="$AGAMA_POST_CHANNEL"
      -F initial_comment="${POST_COMMENT}"
      -H "${SLACK_BOT_AUTH}"
      "https://slack.com/api/files.upload"
  artifacts:
    paths: [$AGAMA_MACOS.dmg]
    expire_in: 1 week
    

deploy:
  stage: deploy
  image: google/cloud-sdk:alpine
  dependencies:
  - build:linux
  - build:windows
  - build:mac
  script:
  - mkdir -p $CI_COMMIT_REF_NAME/Windows
  - mkdir -p $CI_COMMIT_REF_NAME/Linux
  - mkdir -p $CI_COMMIT_REF_NAME/MacOS
  - cp $AGAMA_LINUX $CI_COMMIT_REF_NAME/Linux
  - cp $AGAMA_WINDOWS $CI_COMMIT_REF_NAME/Windows
  - cp $AGAMA_MACOS.dmg $CI_COMMIT_REF_NAME/MacOS
  - echo $AUTH_KEY > AUTH_KEY.json
  - gcloud auth activate-service-account --key-file AUTH_KEY.json
  - gsutil rsync -r $CI_COMMIT_REF_NAME $STAGING/Agama/$CI_COMMIT_REF_NAME/
  artifacts:
    paths: -
    - $AGAMA_WINDOWS
    - $AGAMA_WINDOWS
    - $AGAMA_MACOS.dmg
    expire_in: 1 week


