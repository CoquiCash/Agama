sudo: required
os: linux
dist: xenial
language: node_js
node_js:
- lts/*
env:
  global:
  - BUILD_VERSION=0.04
  - CCACHE_SIZE=100M
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - CCACHE_COMPRESS=1
cache:
  apt: true
  directories:
  - "$HOME/google-cloud-sdk/"
  - "$HOME/.ccache"
matrix:
  fast_finish: true
  include:
  - env: BUILD_ICONS=assets/icons/agama_icons/128x128.png IGNORE_OS_ASSETS_1=assets/bin/osx
      IGNORE_OS_ASSETS_2=assets/bin/win64 TARGET_PLATFORM=linux APP_NAME=Agama-Linux.tar.gz
      ASSETS_DIR=linux64 KOMODO_VARIANT=Linux64
  - env: BUILD_ICONS=assets/icons/agama_icons/agama_app_icon.ico IGNORE_OS_ASSETS_1=assets/bin/osx
      IGNORE_OS_ASSETS_2=assets/bin/linux64 TARGET_PLATFORM=win32 APP_NAME=Agama-Win.zip
      PACKAGES=winehq-devel ASSETS_DIR=win64 KOMODO_VARIANT=Win64

before_install:
- openssl aes-256-cbc -K $encrypted_a41fbd06a4b9_key -iv $encrypted_a41fbd06a4b9_iv
  -in AUTH_KEY.json.enc -out AUTH_KEY.json -d
- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export
  CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
- source /home/travis/google-cloud-sdk/path.bash.inc
- echo $GCLOUD_KEY > ./GC-Auth.json
- gcloud auth activate-service-account --key-file GC-Auth.json

install:
- if [ -n "$PACKAGES" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list;
  fi
- if [ -n "$PACKAGES" ]; then sudo dpkg --add-architecture i386 && wget -nc https://dl.winehq.org/wine-builds/Release.key;
  fi
- if [ -n "$PACKAGES" ]; then sudo apt-key add Release.key; fi
- if [ -n "$PACKAGES" ]; then sudo apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/;
  fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update && sudo apt-get -y
  install --install-recommends -qq $PACKAGES; fi
- "./binary_artifacts.sh"
- yarn add electron-packager -g && yarn add electron -g --unsafe-perm=true
- cd gui/EasyDEX-GUI && yarn install && yarn add webpack webpack-dashboard
- cd react && yarn install && yarn run build
- cd ../../.. && yarn add webpack
- gsutil cp -r gs://$BUCKET/$ARTIFACTS/$TRAVIS_BRANCH/$KOMODO_VARIANT/ .
- tar -xzvf $KOMODO_VARIANT/Komodo-build.tar.gz
- cp -rvf komodo-build/* assets/bin/$ASSETS_DIR
- yarn install
script:
- electron-packager . --platform=$TARGET_PLATFORM --arch=x64 --icon=$BUILD_ICONS --out=build/
  --buildVersion=$BUILD_VERSION --ignore=$IGNORE_OS_ASSETS_1 --ignore=$IGNORE_OS_ASSETS_2
  --overwrite
- if [ $TARGET_PLATFORM = linux ]; then cd build && tar -czf $APP_NAME Agama-linux-x64;
  fi
- if [ $TARGET_PLATFORM = win32 ]; then cd build && zip -r -q -T -m $APP_NAME Agama-win32-x64;
  fi
after_script:
- gsutil cp $APP_NAME gs://$BUCKET/$PROJECT/$TRAVIS_BRANCH/$TARGET_PLATFORM/
